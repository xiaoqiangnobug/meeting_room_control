[program:log_sever]
# 程序执行路径
directory=/opt/project
# 执行命令
command=/opt/py_virtualenvs/py/bin/python /opt/project/libs/log_sever/main.py
# 在supervisord启动后自启动
autostart=true
# 程序退出后自动重启,可选值：[unexpected,true,false]，默认为unexpected，表示进程意外杀死后才重启；意思为如果不是supervisord来关闭的该进程则认为不正当关闭，supervisord会再次把该进程给启动起来，只能使用该supervisorctl来进行关闭、启动、重启操作
autorestart=true
# 启动10秒后没有异常退出，就表示进程正常启动了，默认为1秒
startsecs=5
# 启动失败自动重试次数，默认是3
startretries=1
# 用哪个用户启动进程，默认是root
user=root
# 进程启动优先级，默认999，假如Supervisord需要管理多个进程，那么值小的优先启动
priority=1
# 把stderr重定向到stdout标准输出，默认false
redirect_stderr=true
# stdout标准输出日志文件大小，日志文件大小到200M后则进行切割，切割后的日志文件会标示为catalina.out1,catalina.out2,catalina.out3...，默认50MB
stdout_logfile_maxbytes=200MB
# stdout标准输出日志文件备份数，保存100个200MB的日志文件，超过100个后老的将被删除，默认为10保存10个
stdout_logfile_backups=100
# 标准日志输出位置，如果输出位置不存在则会启动失败
stdout_logfile=/opt/project/logs/log_record.log
# 设置日志追加
logarithmic = true
# 设置实例数量
numprocs = 1
# 设置进程名称
process_name = %(program_name)s

[program:gunicorn]
# 程序执行路径
directory=/opt/project
# 执行命令
command=/opt/py_virtualenvs/py/bin/python /opt/py_virtualenvs/py/bin/gunicorn -c /opt/setup/gunicorn.conf.py
# 在supervisord启动后自启动
autostart=true
# 程序退出后自动重启,可选值：[unexpected,true,false]，默认为unexpected，表示进程意外杀死后才重启；意思为如果不是supervisord来关闭的该进程则认为不正当关闭，supervisord会再次把该进程给启动起来，只能使用该supervisorctl来进行关闭、启动、重启操作
autorestart=true
# 启动10秒后没有异常退出，就表示进程正常启动了，默认为1秒
startsecs=10
# 启动失败自动重试次数，默认是3
startretries=3
# 用哪个用户启动进程，默认是root
user=root
# 进程启动优先级，默认999，假如Supervisord需要管理多个进程，那么值小的优先启动
priority=2
# 把stderr重定向到stdout标准输出，默认false
redirect_stderr=true
# stdout标准输出日志文件大小，日志文件大小到200M后则进行切割，切割后的日志文件会标示为catalina.out1,catalina.out2,catalina.out3...，默认50MB
stdout_logfile_maxbytes=200MB
# stdout标准输出日志文件备份数，保存100个200MB的日志文件，超过100个后老的将被删除，默认为10保存10个
stdout_logfile_backups=100
# 标准日志输出位置，如果输出位置不存在则会启动失败
stdout_logfile=/opt/project/logs/gunicorn.log
# 设置日志追加
logarithmic = true